Problem 1 Test: Store the first N records of the dataset in a custom object

Test 1: If N equals the dataset size

Arrange: Identify the dataset with 5 records. Choose N = 5. Have a custom object prepared to store records.

Act: Store the first N records from the dataset into the custom object.

Assert: The custom object should contain all 5 records, in the same order as in the dataset.

Test 2: If N is larger than the dataset size

Arrange: Identify the dataset with 4 records. Choose N = 10. Have a custom object prepared to store records.

Act: Attempt to store the first N records from the dataset into the custom object.

Assert: The custom object should contain all 4 available records (not 10).



Problem 3 Test: Display a horizontal text-based histogram of the ages

Test 1: Basic multi-age histogram

Arrange: Dataset of client ages: [10, 12, 10, 11]. Use * as the bar character.

Act: Generate and print the histogram (one line per age present, ascending).

Assert: The printed histogram should be exactly:
10: **
11: *
12: *

Test 2: Single-age dataset

Arrange: Dataset of client ages: [7, 7, 7]. Use * as the bar character.

Act: Generate and print the histogram.

Assert: The printed histogram should be exactly:

7: ***

Test 3: Empty dataset (no valid ages)

Arrange: Dataset of client ages: [] (empty).

Act: Attempt to generate and print the histogram.

Assert: The program should print:

No data to display.

Test 4: Dataset includes invalid/negative ages which must be ignored

Arrange: Dataset of client ages: [-1, 10, 10, -5, 11]. Negative ages are invalid and should be ignored by the histogram logic. Use * as the bar character.

Act: Filter out invalid ages, generate and print the histogram for the remaining ages.

Assert: The printed histogram should be exactly:

10: **
11: *


Problem 5 Test: Total number of records for each number of children

Test 1: If number of children is zero

Arrange: Identify the ages of the clients in the dataset. Choose a cutoff age for what counts as a child. Create a total variable to track the number of clients who are children. In this dataset, all ages are above the cutoff age.

Act: Count the total number of clients whose ages are greater than 0 and less than or equal to the cutoff age.

Assert: The total number of records for children is: 0.

Test 2: Multiple children of varying ages

Arrange: Identify the ages of the clients in the dataset (for example: 5, 7, 17, 25, 30). Choose a cutoff age of 17. Create a total variable to track the number of clients who are children.

Act: Count the total number of clients whose ages are greater than 0 and less than or equal to 17.

Assert: The total number of records for children is: 3.


Problem 7 Test: Determine if the dataset is “fair”

Test 1: Perfectly balanced dataset

Arrange: Identify the dataset of records grouped by region. Suppose there are 100 total records, evenly split across 4 regions (25 per region).

Act: Compare the percentage of records in each region.

Assert: Since all regions have exactly 25%, the differences are 0%, which is within the 5% tolerance. The data is fair.Problem 7 Test: Determine if the dataset is “fair”


Test 2: Slight imbalance within 5%

Arrange: Identify the dataset of 100 records, split across 2 regions: Region A = 52 records, Region B = 48 records.

Act: Compare the percentage of records per region. Region A = 52%, Region B = 48%.

Assert: The difference is 4%, which is within the 5% tolerance. The data is fair.

Test 3: Multiple regions with one outlier

Arrange: Identify the dataset of 100 records across 3 regions: Region A = 30, Region B = 33, Region C = 37.

Act: Compare the percentage of records per region. A = 30%, B = 33%, C = 37%.

Assert: The largest difference is 7% (30% vs. 37%), which exceeds the 5% tolerance. The data is not fair.

Test 4: Empty dataset

Arrange: Identify the dataset with 0 records across all regions.

Act: Attempt to calculate fairness.

Assert: With no data available, fairness cannot be determined. The program should either report “No data available” or treat the dataset as not fair.

